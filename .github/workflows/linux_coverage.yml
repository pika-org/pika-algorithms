# Copyright (c) 2020-2022 ETH Zurich
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

name: Linux CI (Coverage)

on:
  push:
    branches:
      - main
      - test-coverage

jobs:
  build:
    name: github/linux/coverage
    runs-on: ubuntu-latest
    container: pikaorg/pika-ci-base:13

    steps:
    - uses: actions/checkout@v2
    - name: Update apt repositories for ccache
      run: apt update
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ccache-linux-coverage
    - name: Check out pika
      uses: actions/checkout@v3
      with:
        repository: pika-org/pika
        ref: 0.11.0
        path: pika
    - name: Install pika
      shell: bash
      working-directory: pika
      run: |
          cmake \
              . \
              -Bbuild \
              -GNinja \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -DCMAKE_BUILD_TYPE=Debug \
              -DPIKA_WITH_MALLOC=system
          cmake --build build --target install
    - name: Configure
      shell: bash
      run: |
          cmake \
              . \
              -Bbuild \
              -GNinja \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -DCMAKE_BUILD_TYPE=Debug \
              -DCMAKE_CXX_FLAGS="--coverage" \
              -DCMAKE_EXE_LINKER_FLAGS="--coverage" \
              -DPIKA_ALGORITHMS_WITH_UNITY_BUILD=ON \
              -DPIKA_ALGORITHMS_WITH_EXAMPLES=ON \
              -DPIKA_ALGORITHMS_WITH_TESTS=ON \
              -DPIKA_ALGORITHMS_WITH_TESTS_HEADERS=OFF \
              -DPIKA_ALGORITHMS_WITH_TESTS_MAX_THREADS=2 \
              -DPIKA_ALGORITHMS_WITH_PARALLEL_TESTS_BIND_NONE=ON
    - name: Build
      shell: bash
      run: |
          cmake --build build --target foreach_range_test
    - name: Test
      shell: bash
      working-directory: build
      continue-on-error: true
      run: |
          ctest -j2 --timeout 120 --output-on-failure -R foreach_range_test
    - name: Upload coverage report
      shell: bash
      working-directory: build
      run: |
          grcov . \
              --source-dir .. \
              --output-path lcov.info \
              --output-type lcov \
              --llvm \
              --ignore-not-existing \
              --keep-only "*include/*"
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
              --project-token ${{ secrets.CODACY_PIKA_ALGORITHMS_PROJECT_TOKEN }} \
              --language CPP \
              --coverage-reports lcov.info
